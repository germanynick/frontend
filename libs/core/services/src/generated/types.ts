export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  BigDecimal: { input: any; output: any; }
  ISO8601Date: { input: any; output: any; }
  ISO8601DateTime: { input: any; output: any; }
  JSON: { input: any; output: any; }
};

export type AppInit = {
  __typename?: 'AppInit';
  chatIntegrationSetting?: Maybe<ChatIntegrationSetting>;
  company?: Maybe<Company>;
  companyConfig?: Maybe<CompanyConfig>;
  companyReferencesData?: Maybe<CompanyReferencesData>;
  masterData?: Maybe<Scalars['JSON']['output']>;
  worker?: Maybe<Worker>;
  workerOnboarding?: Maybe<WorkerOnboarding>;
};

/** Autogenerated return type of ChangePasswordForWorker. */
export type ChangePasswordForWorkerPayload = {
  __typename?: 'ChangePasswordForWorkerPayload';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type ChatIntegrationSetting = {
  __typename?: 'ChatIntegrationSetting';
  active?: Maybe<Scalars['Boolean']['output']>;
  configuration?: Maybe<Scalars['JSON']['output']>;
  provider?: Maybe<Scalars['String']['output']>;
};

export type CityMaster = {
  __typename?: 'CityMaster';
  countryCode?: Maybe<Scalars['String']['output']>;
  countryId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['String']['output'];
  latitude?: Maybe<Scalars['String']['output']>;
  longitude?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  stateCode?: Maybe<Scalars['String']['output']>;
  stateId?: Maybe<Scalars['Int']['output']>;
};

export type Company = {
  __typename?: 'Company';
  address?: Maybe<Scalars['String']['output']>;
  addressState?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  companyConfig?: Maybe<CompanyConfig>;
  country?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  logoUrl: Scalars['String']['output'];
  mainContactEmail?: Maybe<Scalars['String']['output']>;
  mainContactName?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  workers?: Maybe<Array<Worker>>;
  zip?: Maybe<Scalars['String']['output']>;
};

export type CompanyConfig = {
  __typename?: 'CompanyConfig';
  adpUrl?: Maybe<Scalars['String']['output']>;
  benefitUrls?: Maybe<Scalars['JSON']['output']>;
  companyId?: Maybe<Scalars['String']['output']>;
  contactSupportUrl?: Maybe<Scalars['String']['output']>;
  defaultLocationImageMobileUrl?: Maybe<Scalars['String']['output']>;
  defaultLocationImageThumbnailUrl?: Maybe<Scalars['String']['output']>;
  defaultLocationImageWebUrl?: Maybe<Scalars['String']['output']>;
  distanceUnit?: Maybe<Scalars['String']['output']>;
  enableClickTracking?: Maybe<Scalars['Boolean']['output']>;
  enableScreenTracking?: Maybe<Scalars['Boolean']['output']>;
  facebookUrl?: Maybe<Scalars['String']['output']>;
  faqsUrl?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  instagramUrl?: Maybe<Scalars['String']['output']>;
  linkedInUrl?: Maybe<Scalars['String']['output']>;
  linkedinRedirectUrl?: Maybe<Scalars['String']['output']>;
  livechatIntegration?: Maybe<LivechatIntegration>;
  messagingServiceSender?: Maybe<Scalars['String']['output']>;
  mobileOpusPolicies?: Maybe<Scalars['String']['output']>;
  oneSignalAppId?: Maybe<Scalars['String']['output']>;
  privacyPoblicyUrl?: Maybe<Scalars['String']['output']>;
  privacyPolicyContent?: Maybe<Scalars['String']['output']>;
  referalRewardContent?: Maybe<Scalars['String']['output']>;
  reportBugsUrl?: Maybe<Scalars['String']['output']>;
  termUrl?: Maybe<Scalars['String']['output']>;
  twitterUrl?: Maybe<Scalars['String']['output']>;
  usingModules?: Maybe<Array<Scalars['String']['output']>>;
  webOpusPolicies?: Maybe<Scalars['String']['output']>;
  webPortalUrl?: Maybe<Scalars['String']['output']>;
  workerTermsOfService?: Maybe<TermsOfService>;
  youtubeUrl?: Maybe<Scalars['String']['output']>;
};

export type CompanyReferencesData = {
  __typename?: 'CompanyReferencesData';
  cities: Array<CityMaster>;
  states: Array<StateMaster>;
};


export type CompanyReferencesDataCitiesArgs = {
  stateCode: Scalars['String']['input'];
};


export type CompanyReferencesDataStatesArgs = {
  countryCode: Scalars['String']['input'];
};

/** Autogenerated return type of CreateIntegrationWorker. */
export type CreateIntegrationWorkerPayload = {
  __typename?: 'CreateIntegrationWorkerPayload';
  authToken: Scalars['String']['output'];
  notificationChannel?: Maybe<Scalars['String']['output']>;
  worker: Worker;
};

/** Autogenerated return type of DestroyWorkerEducation. */
export type DestroyWorkerEducationPayload = {
  __typename?: 'DestroyWorkerEducationPayload';
  id: Scalars['String']['output'];
  success: Scalars['Boolean']['output'];
};

export type Discipline = {
  __typename?: 'Discipline';
  externalId?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type Facility = {
  __typename?: 'Facility';
  active?: Maybe<Scalars['String']['output']>;
  companyId?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  externalId?: Maybe<Scalars['String']['output']>;
  facilityGroupId?: Maybe<Scalars['String']['output']>;
  locationId?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type File = {
  __typename?: 'File';
  blobId?: Maybe<Scalars['String']['output']>;
  contentType?: Maybe<Scalars['String']['output']>;
  fileUrl?: Maybe<Scalars['String']['output']>;
  filename?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  imageUrls?: Maybe<Scalars['JSON']['output']>;
  /** deprecated */
  thumbnails?: Maybe<Scalars['JSON']['output']>;
};


export type FileImageUrlsArgs = {
  size: Array<Scalars['String']['input']>;
};

export type GroupOnboardingPart = {
  __typename?: 'GroupOnboardingPart';
  company: Company;
  id: Scalars['String']['output'];
  state: Scalars['String']['output'];
  worker: Worker;
};

export type Job = {
  __typename?: 'Job';
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  createdDate?: Maybe<Scalars['ISO8601DateTime']['output']>;
  customStartDate?: Maybe<Scalars['String']['output']>;
  distance?: Maybe<Scalars['Float']['output']>;
  duration?: Maybe<Scalars['Int']['output']>;
  exclusiveJob?: Maybe<Scalars['Boolean']['output']>;
  externalCreatedAt?: Maybe<Scalars['ISO8601Date']['output']>;
  externalUpdatedAt?: Maybe<Scalars['ISO8601Date']['output']>;
  facilityType?: Maybe<Scalars['String']['output']>;
  favoriteCount?: Maybe<Scalars['Int']['output']>;
  frequency?: Maybe<Scalars['String']['output']>;
  hoursPerWeek?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  images?: Maybe<Array<Scalars['String']['output']>>;
  jobGeneral?: Maybe<JobGeneral>;
  jobType?: Maybe<Scalars['String']['output']>;
  locationImage?: Maybe<LocationImage>;
  matchingPercentage?: Maybe<Scalars['Float']['output']>;
  minWeeklyPayAmount?: Maybe<Scalars['Float']['output']>;
  shifts?: Maybe<Array<Scalars['String']['output']>>;
  slotsNumber?: Maybe<Scalars['Int']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  startDate?: Maybe<Scalars['ISO8601Date']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  viewCount?: Maybe<Scalars['Int']['output']>;
  weeklyPayAmount?: Maybe<Scalars['Float']['output']>;
};

/** Filter jobs */
export type JobFilter = {
  exclusiveJob?: InputMaybe<Scalars['Boolean']['input']>;
  externalId?: InputMaybe<Scalars['String']['input']>;
  facilityTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  jobIds?: InputMaybe<Array<Scalars['String']['input']>>;
  jobTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  keyword?: InputMaybe<Scalars['String']['input']>;
  locationCities?: InputMaybe<Array<Scalars['String']['input']>>;
  locationStates?: InputMaybe<Array<Scalars['String']['input']>>;
  maxWage?: InputMaybe<Scalars['Float']['input']>;
  minMatchingPercentage?: InputMaybe<Scalars['Int']['input']>;
  minWage?: InputMaybe<Scalars['Float']['input']>;
  nearBy?: InputMaybe<NearByJobSearch>;
  postedInDays?: InputMaybe<Scalars['Int']['input']>;
  profession?: InputMaybe<Scalars['String']['input']>;
  shifts?: InputMaybe<Array<Scalars['String']['input']>>;
  specialties?: InputMaybe<Array<Scalars['String']['input']>>;
  startDate?: InputMaybe<StartDateSearch>;
};

export type JobGeneral = {
  __typename?: 'JobGeneral';
  companyId?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  discipline?: Maybe<Discipline>;
  facility?: Maybe<Facility>;
  hotJob?: Maybe<Scalars['String']['output']>;
  payCurrency?: Maybe<Scalars['String']['output']>;
  requirements?: Maybe<Scalars['String']['output']>;
  setting?: Maybe<Scalars['String']['output']>;
  specialties?: Maybe<Array<Specialty>>;
};

/** Job management sorting */
export type JobManagementSort = {
  field: JobManagementSortEnum;
  order: SortOrder;
};

export enum JobManagementSortEnum {
  /** By distance */
  Distance = 'DISTANCE',
  /** By created date */
  Newest = 'NEWEST',
  /** By weekly pay amount */
  Pay = 'PAY',
  /** By matching score */
  Score = 'SCORE',
  /** By start date */
  StartDate = 'START_DATE'
}

export type JobWithPagination = {
  __typename?: 'JobWithPagination';
  jobs?: Maybe<Array<Job>>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type LivechatIntegration = {
  __typename?: 'LivechatIntegration';
  accountId?: Maybe<Scalars['String']['output']>;
};

export type LocationImage = {
  __typename?: 'LocationImage';
  city?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  mobileImage?: Maybe<File>;
  state?: Maybe<Scalars['String']['output']>;
  thumbnailImage?: Maybe<File>;
  webImage?: Maybe<File>;
};

export type Mutation = {
  __typename?: 'Mutation';
  changePasswordForWorker?: Maybe<ChangePasswordForWorkerPayload>;
  createIntegrationWorker?: Maybe<CreateIntegrationWorkerPayload>;
  createWorkerEducation?: Maybe<WorkerEducation>;
  destroyWorkerEducation?: Maybe<DestroyWorkerEducationPayload>;
  resetPasswordForWorker?: Maybe<ResetPasswordForWorkerPayload>;
  sendPasswordResetWorker?: Maybe<SendPasswordResetWorkerPayload>;
  signInWorker?: Maybe<SignInWorkerPayload>;
  signOutWorker?: Maybe<SignOutWorkerPayload>;
  updateWorkerEducation?: Maybe<WorkerEducation>;
};


export type MutationChangePasswordForWorkerArgs = {
  oldPassword?: InputMaybe<Scalars['String']['input']>;
  password: Scalars['String']['input'];
  passwordConfirmation: Scalars['String']['input'];
};


export type MutationCreateIntegrationWorkerArgs = {
  email: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  lastName: Scalars['String']['input'];
  noSms?: InputMaybe<Scalars['Boolean']['input']>;
  password: Scalars['String']['input'];
  passwordConfirmation: Scalars['String']['input'];
  phone: Scalars['String']['input'];
  recaptchaToken?: InputMaybe<Scalars['String']['input']>;
  referrerCode?: InputMaybe<Scalars['String']['input']>;
  socialAuthenticationId?: InputMaybe<Scalars['String']['input']>;
  source?: InputMaybe<SignupSourceEnum>;
};


export type MutationCreateWorkerEducationArgs = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  degreeDate?: InputMaybe<Scalars['ISO8601Date']['input']>;
  degreeName?: InputMaybe<Scalars['String']['input']>;
  major?: InputMaybe<Scalars['String']['input']>;
  schoolName?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
};


export type MutationDestroyWorkerEducationArgs = {
  id: Scalars['String']['input'];
};


export type MutationResetPasswordForWorkerArgs = {
  password: Scalars['String']['input'];
  passwordConfirmation: Scalars['String']['input'];
  recaptchaToken?: InputMaybe<Scalars['String']['input']>;
  token: Scalars['String']['input'];
  userTokenId: Scalars['String']['input'];
};


export type MutationSendPasswordResetWorkerArgs = {
  email: Scalars['String']['input'];
};


export type MutationSignInWorkerArgs = {
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
  recaptchaToken?: InputMaybe<Scalars['String']['input']>;
  socialAuthenticationId?: InputMaybe<Scalars['String']['input']>;
};


export type MutationUpdateWorkerEducationArgs = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  degreeDate?: InputMaybe<Scalars['ISO8601Date']['input']>;
  degreeName?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
  major?: InputMaybe<Scalars['String']['input']>;
  schoolName?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
};

/** Search jobs near by */
export type NearByJobSearch = {
  lat?: InputMaybe<Scalars['BigDecimal']['input']>;
  long?: InputMaybe<Scalars['BigDecimal']['input']>;
  radius?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type NotificationSetting = {
  __typename?: 'NotificationSetting';
  assignmentEndingReminder?: Maybe<Scalars['Boolean']['output']>;
  completeOnboarding?: Maybe<Scalars['Boolean']['output']>;
  documentExpired?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  jobAlert?: Maybe<Scalars['Boolean']['output']>;
  jobsRecommendation?: Maybe<Scalars['Boolean']['output']>;
  licenseExpired?: Maybe<Scalars['Boolean']['output']>;
  licenseExpiredOptions?: Maybe<Scalars['JSON']['output']>;
  licenseWillBeExpiredOptions?: Maybe<Scalars['JSON']['output']>;
  timecardSubmissionReminder?: Maybe<Scalars['Boolean']['output']>;
};

export type OnboardingPart = {
  __typename?: 'OnboardingPart';
  companyId: Scalars['String']['output'];
  companyOnboardingId: Scalars['String']['output'];
  confirmationMessage?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  failedMessage?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  integrationObject: Scalars['String']['output'];
  isEnabled: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  pendingMessage?: Maybe<Scalars['String']['output']>;
  quizId?: Maybe<Scalars['String']['output']>;
  referenceUrl?: Maybe<Scalars['String']['output']>;
  /** This field will be available to Worker session only */
  workerOnboardingPart?: Maybe<WorkerOnboardingPart>;
};

export type Query = {
  __typename?: 'Query';
  appInit?: Maybe<AppInit>;
  /** Return list US cities by given specific state */
  cities: Array<CityMaster>;
  /** Find a job by ID */
  job?: Maybe<Job>;
  jobSearch?: Maybe<JobWithPagination>;
  /** Return list US states */
  states: Array<StateMaster>;
  /** Find a worker by ID */
  worker?: Maybe<Worker>;
  /** List worker educations */
  workerEducations: Array<WorkerEducation>;
};


export type QueryCitiesArgs = {
  stateCode: Scalars['String']['input'];
};


export type QueryJobArgs = {
  id: Scalars['String']['input'];
};


export type QueryJobSearchArgs = {
  filter?: InputMaybe<JobFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<JobManagementSort>;
};


export type QueryStatesArgs = {
  countryCode: Scalars['String']['input'];
};


export type QueryWorkerArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


export type QueryWorkerEducationsArgs = {
  workerId?: InputMaybe<Scalars['String']['input']>;
};

export type Recruiter = {
  __typename?: 'Recruiter';
  companyId: Scalars['String']['output'];
  email?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated return type of ResetPasswordForWorker. */
export type ResetPasswordForWorkerPayload = {
  __typename?: 'ResetPasswordForWorkerPayload';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type ResumeOnboarding = {
  __typename?: 'ResumeOnboarding';
  id: Scalars['String']['output'];
  worker?: Maybe<Worker>;
};

/** Autogenerated return type of SendPasswordResetWorker. */
export type SendPasswordResetWorkerPayload = {
  __typename?: 'SendPasswordResetWorkerPayload';
  userTokenId?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated return type of SignInWorker. */
export type SignInWorkerPayload = {
  __typename?: 'SignInWorkerPayload';
  authToken?: Maybe<Scalars['String']['output']>;
  notificationChannel?: Maybe<Scalars['String']['output']>;
  worker?: Maybe<Worker>;
};

/** Autogenerated return type of SignOutWorker. */
export type SignOutWorkerPayload = {
  __typename?: 'SignOutWorkerPayload';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export enum SignupSourceEnum {
  /** Opus Mobile App */
  OpusMobileApp = 'opus_mobile_app',
  /** Opus Web Portal */
  OpusWebPortal = 'opus_web_portal'
}

export enum SortOrder {
  /** Ascending */
  Asc = 'asc',
  /** Descending */
  Desc = 'desc'
}

export type Specialty = {
  __typename?: 'Specialty';
  companyId?: Maybe<Scalars['String']['output']>;
  hasChecklist?: Maybe<Scalars['Boolean']['output']>;
  longName?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
};

export type SpecialtyOnboarding = {
  __typename?: 'SpecialtyOnboarding';
  id: Scalars['String']['output'];
  workerSpecialties?: Maybe<Array<WorkerSpecialty>>;
};

export type StartDateSearch = {
  from?: InputMaybe<Scalars['ISO8601Date']['input']>;
  to?: InputMaybe<Scalars['ISO8601Date']['input']>;
};

export type StateMaster = {
  __typename?: 'StateMaster';
  countryCode?: Maybe<Scalars['String']['output']>;
  countryId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['String']['output'];
  latitude?: Maybe<Scalars['String']['output']>;
  longitude?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  stateCode?: Maybe<Scalars['String']['output']>;
};

export type TermsOfService = {
  __typename?: 'TermsOfService';
  id: Scalars['String']['output'];
  url: Scalars['String']['output'];
  version: Scalars['String']['output'];
};

export type UserTermsOfService = {
  __typename?: 'UserTermsOfService';
  agreedAt: Scalars['String']['output'];
  id: Scalars['String']['output'];
  termsOfService: TermsOfService;
};

export type WorkExperience = {
  __typename?: 'WorkExperience';
  agency?: Maybe<Scalars['String']['output']>;
  assignmentType?: Maybe<Scalars['String']['output']>;
  bedsInUnit?: Maybe<Scalars['Int']['output']>;
  birthsPerMonth?: Maybe<Scalars['String']['output']>;
  chartingSoftwareUsed?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  currentlyEmployed?: Maybe<Scalars['Boolean']['output']>;
  dailyCensus?: Maybe<Scalars['Float']['output']>;
  dutiesPerformed?: Maybe<Scalars['String']['output']>;
  endDate?: Maybe<Scalars['ISO8601Date']['output']>;
  facilityName?: Maybe<Scalars['String']['output']>;
  facilityType?: Maybe<Scalars['String']['output']>;
  floatSpecialty?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  mayContactSupervisor?: Maybe<Scalars['Boolean']['output']>;
  numberSuites?: Maybe<Scalars['Float']['output']>;
  nurseRatio?: Maybe<Scalars['String']['output']>;
  patientRatio?: Maybe<Scalars['String']['output']>;
  patientType?: Maybe<Scalars['String']['output']>;
  position?: Maybe<Scalars['String']['output']>;
  reasonForLeaving?: Maybe<Scalars['String']['output']>;
  startDate?: Maybe<Scalars['ISO8601Date']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  supervisor?: Maybe<Scalars['String']['output']>;
  travelAssignment?: Maybe<Scalars['Boolean']['output']>;
  unitSpecialty?: Maybe<Scalars['String']['output']>;
  zipcode?: Maybe<Scalars['String']['output']>;
};

export type WorkExperienceOverview = {
  __typename?: 'WorkExperienceOverview';
  discipline?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  primarySpecialty?: Maybe<Scalars['String']['output']>;
  secondarySpecialty?: Maybe<Scalars['String']['output']>;
  workExperiences?: Maybe<Array<WorkExperience>>;
  yearsOfExperience?: Maybe<Scalars['String']['output']>;
};

export type WorkWeek = {
  __typename?: 'WorkWeek';
  active?: Maybe<Scalars['Boolean']['output']>;
  endDate?: Maybe<Scalars['ISO8601Date']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  startDate?: Maybe<Scalars['ISO8601Date']['output']>;
};

export type WorkedTimesheet = {
  __typename?: 'WorkedTimesheet';
  callHours?: Maybe<Scalars['Float']['output']>;
  id: Scalars['String']['output'];
  paidHours?: Maybe<Scalars['Float']['output']>;
  shiftsWorked?: Maybe<Scalars['Float']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  weekManagement?: Maybe<WorkWeek>;
};

export type Worker = {
  __typename?: 'Worker';
  agreedToTerms?: Maybe<Scalars['Boolean']['output']>;
  availableStartDate?: Maybe<Scalars['ISO8601Date']['output']>;
  changePasswordRequired?: Maybe<Scalars['Boolean']['output']>;
  company?: Maybe<Company>;
  completedJobsNumber?: Maybe<Scalars['Int']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  facilityTypes?: Maybe<Scalars['String']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  jobCategoriesWorkedNumber?: Maybe<Scalars['Int']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  lastOtpExpiredAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  lastSignInAt?: Maybe<Scalars['String']['output']>;
  locationsWorkedNumber?: Maybe<Scalars['Int']['output']>;
  maidenName?: Maybe<Scalars['String']['output']>;
  noCall?: Maybe<Scalars['Boolean']['output']>;
  noEmail?: Maybe<Scalars['Boolean']['output']>;
  noNotification?: Maybe<Scalars['Boolean']['output']>;
  noSms?: Maybe<Scalars['Boolean']['output']>;
  notificationSetting?: Maybe<NotificationSetting>;
  overallRating?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  phoneVerifiedAt?: Maybe<Scalars['String']['output']>;
  recruiter?: Maybe<Recruiter>;
  referralCode?: Maybe<Scalars['String']['output']>;
  referralMethod?: Maybe<Scalars['String']['output']>;
  referrerCode?: Maybe<Scalars['String']['output']>;
  shiftRequested?: Maybe<Scalars['String']['output']>;
  timeOffRequested?: Maybe<Scalars['String']['output']>;
  workAuthorized?: Maybe<Scalars['Boolean']['output']>;
  workExperienceOverview?: Maybe<WorkExperienceOverview>;
  workExperiences?: Maybe<Array<WorkExperience>>;
  workedTimesheets?: Maybe<Array<WorkedTimesheet>>;
  workerAddress?: Maybe<WorkerAddress>;
  workingPreferredLocations?: Maybe<Array<WorkingPreferredLocation>>;
};

export type WorkerAddress = {
  __typename?: 'WorkerAddress';
  aptNumber?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  state?: Maybe<Scalars['String']['output']>;
  street?: Maybe<Scalars['String']['output']>;
  workerId: Scalars['Boolean']['output'];
  zipcode?: Maybe<Scalars['String']['output']>;
};

export type WorkerEducation = {
  __typename?: 'WorkerEducation';
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  degreeDate?: Maybe<Scalars['ISO8601Date']['output']>;
  degreeName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  major?: Maybe<Scalars['String']['output']>;
  schoolName?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  worker?: Maybe<Worker>;
};

export type WorkerOnboarding = {
  __typename?: 'WorkerOnboarding';
  companyOnboardingId: Scalars['String']['output'];
  currentPartIndex?: Maybe<Scalars['Int']['output']>;
  id: Scalars['String']['output'];
  message?: Maybe<Scalars['String']['output']>;
  pendingWorkerOnboardingPart?: Maybe<WorkerOnboardingPart>;
  percentageCompleted?: Maybe<Scalars['Int']['output']>;
  permittedEvents?: Maybe<Array<Scalars['String']['output']>>;
  state: Scalars['String']['output'];
  worker?: Maybe<Worker>;
};

export type WorkerOnboardingPart = {
  __typename?: 'WorkerOnboardingPart';
  id: Scalars['String']['output'];
  integration?: Maybe<WorkerOnboardingPartIntegration>;
  integrationConfigurations?: Maybe<Scalars['JSON']['output']>;
  integrationObject: Scalars['String']['output'];
  onboardingPart: OnboardingPart;
  state: Scalars['String']['output'];
  workerId?: Maybe<Scalars['String']['output']>;
  workerOnboarding: WorkerOnboarding;
};

/** Integration object from WorkerOnboardingPart */
export type WorkerOnboardingPartIntegration = GroupOnboardingPart | ResumeOnboarding | SpecialtyOnboarding | UserTermsOfService | WorkerReferenceOnboarding | WorkingPreferredLocationOnboarding;

export type WorkerReference = {
  __typename?: 'WorkerReference';
  city?: Maybe<Scalars['String']['output']>;
  company?: Maybe<Company>;
  contactEmail?: Maybe<Scalars['String']['output']>;
  contactFirstName?: Maybe<Scalars['String']['output']>;
  contactFullName?: Maybe<Scalars['String']['output']>;
  contactLastName?: Maybe<Scalars['String']['output']>;
  contactPhone?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  facilityName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  jobTitle?: Maybe<Scalars['String']['output']>;
  refType?: Maybe<WorkerReferenceTypeEnum>;
  relationship?: Maybe<Scalars['String']['output']>;
  salutation?: Maybe<WorkerReferenceSalutationEnum>;
  state?: Maybe<Scalars['String']['output']>;
  workedFrom?: Maybe<Scalars['ISO8601Date']['output']>;
  workedTo?: Maybe<Scalars['ISO8601Date']['output']>;
  worker?: Maybe<Worker>;
};

export type WorkerReferenceOnboarding = {
  __typename?: 'WorkerReferenceOnboarding';
  id: Scalars['String']['output'];
  workerReferences?: Maybe<Array<WorkerReference>>;
};

export enum WorkerReferenceSalutationEnum {
  /** Dr. */
  Dr = 'dr',
  /** Mr. */
  Mr = 'mr',
  /** Mrs. */
  Mrs = 'mrs',
  /** Ms. */
  Ms = 'ms',
  /** Mx. */
  Mx = 'mx',
  /** None Preferred */
  NonPreferred = 'non_preferred',
  /** Professor */
  Professor = 'professor'
}

export enum WorkerReferenceTypeEnum {
  /** Current */
  Current = 'current',
  /** Former */
  Former = 'former'
}

export type WorkerSpecialty = {
  __typename?: 'WorkerSpecialty';
  category?: Maybe<Scalars['String']['output']>;
  company?: Maybe<Company>;
  completedChecklist?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  isPrimary?: Maybe<Scalars['Boolean']['output']>;
  specialty?: Maybe<Scalars['String']['output']>;
  specialtyId?: Maybe<Scalars['String']['output']>;
  specialtyLongName?: Maybe<Scalars['String']['output']>;
  worker?: Maybe<Worker>;
};

export type WorkingPreferredLocation = {
  __typename?: 'WorkingPreferredLocation';
  id?: Maybe<Scalars['String']['output']>;
  preferredWorkingCity?: Maybe<Scalars['String']['output']>;
  preferredWorkingState?: Maybe<Scalars['String']['output']>;
};

export type WorkingPreferredLocationOnboarding = {
  __typename?: 'WorkingPreferredLocationOnboarding';
  id: Scalars['String']['output'];
  worker?: Maybe<Worker>;
  workingPreferredLocations?: Maybe<Array<WorkingPreferredLocation>>;
};

export type ChangePasswordForWorkerMutationVariables = Exact<{
  oldPassword?: InputMaybe<Scalars['String']['input']>;
  password: Scalars['String']['input'];
  passwordConfirmation: Scalars['String']['input'];
}>;


export type ChangePasswordForWorkerMutation = { __typename?: 'Mutation', changePasswordForWorker?: { __typename?: 'ChangePasswordForWorkerPayload', success?: boolean | null } | null };

export type CreateIntegrationWorkerMutationVariables = Exact<{
  email: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  lastName: Scalars['String']['input'];
  noSms?: InputMaybe<Scalars['Boolean']['input']>;
  password: Scalars['String']['input'];
  passwordConfirmation: Scalars['String']['input'];
  phone: Scalars['String']['input'];
  recaptchaToken?: InputMaybe<Scalars['String']['input']>;
  referrerCode?: InputMaybe<Scalars['String']['input']>;
  socialAuthenticationId?: InputMaybe<Scalars['String']['input']>;
  source?: InputMaybe<SignupSourceEnum>;
}>;


export type CreateIntegrationWorkerMutation = { __typename?: 'Mutation', createIntegrationWorker?: { __typename?: 'CreateIntegrationWorkerPayload', authToken: string, notificationChannel?: string | null, worker: { __typename?: 'Worker', agreedToTerms?: boolean | null, availableStartDate?: any | null, changePasswordRequired?: boolean | null, completedJobsNumber?: number | null, email?: string | null, facilityTypes?: string | null, firstName?: string | null, id?: string | null, jobCategoriesWorkedNumber?: number | null, lastName?: string | null, lastOtpExpiredAt?: any | null, lastSignInAt?: string | null, locationsWorkedNumber?: number | null, maidenName?: string | null, noCall?: boolean | null, noEmail?: boolean | null, noNotification?: boolean | null, noSms?: boolean | null, overallRating?: string | null, phone?: string | null, phoneVerifiedAt?: string | null, referralCode?: string | null, referralMethod?: string | null, referrerCode?: string | null, shiftRequested?: string | null, timeOffRequested?: string | null, workAuthorized?: boolean | null } } | null };

export type CreateWorkerEducationMutationVariables = Exact<{
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  degreeDate?: InputMaybe<Scalars['ISO8601Date']['input']>;
  degreeName?: InputMaybe<Scalars['String']['input']>;
  major?: InputMaybe<Scalars['String']['input']>;
  schoolName?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
}>;


export type CreateWorkerEducationMutation = { __typename?: 'Mutation', createWorkerEducation?: { __typename?: 'WorkerEducation', city?: string | null, country?: string | null, createdAt?: any | null, degreeDate?: any | null, degreeName?: string | null, id?: string | null, major?: string | null, schoolName?: string | null, state?: string | null, worker?: { __typename?: 'Worker', agreedToTerms?: boolean | null, availableStartDate?: any | null, changePasswordRequired?: boolean | null, completedJobsNumber?: number | null, email?: string | null, facilityTypes?: string | null, firstName?: string | null, id?: string | null, jobCategoriesWorkedNumber?: number | null, lastName?: string | null, lastOtpExpiredAt?: any | null, lastSignInAt?: string | null, locationsWorkedNumber?: number | null, maidenName?: string | null, noCall?: boolean | null, noEmail?: boolean | null, noNotification?: boolean | null, noSms?: boolean | null, overallRating?: string | null, phone?: string | null, phoneVerifiedAt?: string | null, referralCode?: string | null, referralMethod?: string | null, referrerCode?: string | null, shiftRequested?: string | null, timeOffRequested?: string | null, workAuthorized?: boolean | null } | null } | null };

export type DestroyWorkerEducationMutationVariables = Exact<{
  id: Scalars['String']['input'];
}>;


export type DestroyWorkerEducationMutation = { __typename?: 'Mutation', destroyWorkerEducation?: { __typename?: 'DestroyWorkerEducationPayload', id: string, success: boolean } | null };

export type ResetPasswordForWorkerMutationVariables = Exact<{
  password: Scalars['String']['input'];
  passwordConfirmation: Scalars['String']['input'];
  recaptchaToken?: InputMaybe<Scalars['String']['input']>;
  token: Scalars['String']['input'];
  userTokenId: Scalars['String']['input'];
}>;


export type ResetPasswordForWorkerMutation = { __typename?: 'Mutation', resetPasswordForWorker?: { __typename?: 'ResetPasswordForWorkerPayload', success?: boolean | null } | null };

export type SendPasswordResetWorkerMutationVariables = Exact<{
  email: Scalars['String']['input'];
}>;


export type SendPasswordResetWorkerMutation = { __typename?: 'Mutation', sendPasswordResetWorker?: { __typename?: 'SendPasswordResetWorkerPayload', userTokenId?: string | null } | null };

export type SignInWorkerMutationVariables = Exact<{
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
  recaptchaToken?: InputMaybe<Scalars['String']['input']>;
  socialAuthenticationId?: InputMaybe<Scalars['String']['input']>;
}>;


export type SignInWorkerMutation = { __typename?: 'Mutation', signInWorker?: { __typename?: 'SignInWorkerPayload', authToken?: string | null, notificationChannel?: string | null, worker?: { __typename?: 'Worker', agreedToTerms?: boolean | null, availableStartDate?: any | null, changePasswordRequired?: boolean | null, completedJobsNumber?: number | null, email?: string | null, facilityTypes?: string | null, firstName?: string | null, id?: string | null, jobCategoriesWorkedNumber?: number | null, lastName?: string | null, lastOtpExpiredAt?: any | null, lastSignInAt?: string | null, locationsWorkedNumber?: number | null, maidenName?: string | null, noCall?: boolean | null, noEmail?: boolean | null, noNotification?: boolean | null, noSms?: boolean | null, overallRating?: string | null, phone?: string | null, phoneVerifiedAt?: string | null, referralCode?: string | null, referralMethod?: string | null, referrerCode?: string | null, shiftRequested?: string | null, timeOffRequested?: string | null, workAuthorized?: boolean | null } | null } | null };

export type SignOutWorkerMutationVariables = Exact<{ [key: string]: never; }>;


export type SignOutWorkerMutation = { __typename?: 'Mutation', signOutWorker?: { __typename?: 'SignOutWorkerPayload', success?: boolean | null } | null };

export type UpdateWorkerEducationMutationVariables = Exact<{
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  degreeDate?: InputMaybe<Scalars['ISO8601Date']['input']>;
  degreeName?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
  major?: InputMaybe<Scalars['String']['input']>;
  schoolName?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
}>;


export type UpdateWorkerEducationMutation = { __typename?: 'Mutation', updateWorkerEducation?: { __typename?: 'WorkerEducation', city?: string | null, country?: string | null, createdAt?: any | null, degreeDate?: any | null, degreeName?: string | null, id?: string | null, major?: string | null, schoolName?: string | null, state?: string | null, worker?: { __typename?: 'Worker', agreedToTerms?: boolean | null, availableStartDate?: any | null, changePasswordRequired?: boolean | null, completedJobsNumber?: number | null, email?: string | null, facilityTypes?: string | null, firstName?: string | null, id?: string | null, jobCategoriesWorkedNumber?: number | null, lastName?: string | null, lastOtpExpiredAt?: any | null, lastSignInAt?: string | null, locationsWorkedNumber?: number | null, maidenName?: string | null, noCall?: boolean | null, noEmail?: boolean | null, noNotification?: boolean | null, noSms?: boolean | null, overallRating?: string | null, phone?: string | null, phoneVerifiedAt?: string | null, referralCode?: string | null, referralMethod?: string | null, referrerCode?: string | null, shiftRequested?: string | null, timeOffRequested?: string | null, workAuthorized?: boolean | null } | null } | null };

export type AppInitQueryVariables = Exact<{ [key: string]: never; }>;


export type AppInitQuery = { __typename?: 'Query', appInit?: { __typename?: 'AppInit', masterData?: any | null, chatIntegrationSetting?: { __typename?: 'ChatIntegrationSetting', active?: boolean | null, configuration?: any | null, provider?: string | null } | null, company?: { __typename?: 'Company', address?: string | null, addressState?: string | null, city?: string | null, country?: string | null, description?: string | null, id: string, logoUrl: string, mainContactEmail?: string | null, mainContactName?: string | null, name?: string | null, phone?: string | null, zip?: string | null } | null, companyConfig?: { __typename?: 'CompanyConfig', adpUrl?: string | null, benefitUrls?: any | null, companyId?: string | null, contactSupportUrl?: string | null, defaultLocationImageMobileUrl?: string | null, defaultLocationImageThumbnailUrl?: string | null, defaultLocationImageWebUrl?: string | null, distanceUnit?: string | null, enableClickTracking?: boolean | null, enableScreenTracking?: boolean | null, facebookUrl?: string | null, faqsUrl?: string | null, id: string, instagramUrl?: string | null, linkedInUrl?: string | null, linkedinRedirectUrl?: string | null, messagingServiceSender?: string | null, mobileOpusPolicies?: string | null, oneSignalAppId?: string | null, privacyPoblicyUrl?: string | null, privacyPolicyContent?: string | null, referalRewardContent?: string | null, reportBugsUrl?: string | null, termUrl?: string | null, twitterUrl?: string | null, usingModules?: Array<string> | null, webOpusPolicies?: string | null, webPortalUrl?: string | null, youtubeUrl?: string | null } | null, worker?: { __typename?: 'Worker', agreedToTerms?: boolean | null, availableStartDate?: any | null, changePasswordRequired?: boolean | null, completedJobsNumber?: number | null, email?: string | null, facilityTypes?: string | null, firstName?: string | null, id?: string | null, jobCategoriesWorkedNumber?: number | null, lastName?: string | null, lastOtpExpiredAt?: any | null, lastSignInAt?: string | null, locationsWorkedNumber?: number | null, maidenName?: string | null, noCall?: boolean | null, noEmail?: boolean | null, noNotification?: boolean | null, noSms?: boolean | null, overallRating?: string | null, phone?: string | null, phoneVerifiedAt?: string | null, referralCode?: string | null, referralMethod?: string | null, referrerCode?: string | null, shiftRequested?: string | null, timeOffRequested?: string | null, workAuthorized?: boolean | null } | null, workerOnboarding?: { __typename?: 'WorkerOnboarding', companyOnboardingId: string, currentPartIndex?: number | null, id: string, message?: string | null, percentageCompleted?: number | null, permittedEvents?: Array<string> | null, state: string } | null } | null };

export type CitiesQueryVariables = Exact<{
  stateCode: Scalars['String']['input'];
}>;


export type CitiesQuery = { __typename?: 'Query', cities: Array<{ __typename?: 'CityMaster', countryCode?: string | null, countryId?: number | null, id: string, latitude?: string | null, longitude?: string | null, name?: string | null, stateCode?: string | null, stateId?: number | null }> };

export type JobQueryVariables = Exact<{
  id: Scalars['String']['input'];
}>;


export type JobQuery = { __typename?: 'Query', job?: { __typename?: 'Job', createdAt?: any | null, createdDate?: any | null, customStartDate?: string | null, distance?: number | null, duration?: number | null, exclusiveJob?: boolean | null, externalCreatedAt?: any | null, externalUpdatedAt?: any | null, facilityType?: string | null, favoriteCount?: number | null, frequency?: string | null, hoursPerWeek?: number | null, id?: string | null, images?: Array<string> | null, jobType?: string | null, matchingPercentage?: number | null, minWeeklyPayAmount?: number | null, shifts?: Array<string> | null, slotsNumber?: number | null, slug?: string | null, startDate?: any | null, status?: string | null, title?: string | null, updatedAt?: any | null, viewCount?: number | null, weeklyPayAmount?: number | null, jobGeneral?: { __typename?: 'JobGeneral', companyId?: string | null, description?: string | null, hotJob?: string | null, payCurrency?: string | null, requirements?: string | null, setting?: string | null } | null, locationImage?: { __typename?: 'LocationImage', city?: string | null, id?: string | null, state?: string | null } | null } | null };

export type JobSearchQueryVariables = Exact<{
  filter?: InputMaybe<JobFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<JobManagementSort>;
}>;


export type JobSearchQuery = { __typename?: 'Query', jobSearch?: { __typename?: 'JobWithPagination', totalCount?: number | null, jobs?: Array<{ __typename?: 'Job', createdAt?: any | null, createdDate?: any | null, customStartDate?: string | null, distance?: number | null, duration?: number | null, exclusiveJob?: boolean | null, externalCreatedAt?: any | null, externalUpdatedAt?: any | null, facilityType?: string | null, favoriteCount?: number | null, frequency?: string | null, hoursPerWeek?: number | null, id?: string | null, images?: Array<string> | null, jobType?: string | null, matchingPercentage?: number | null, minWeeklyPayAmount?: number | null, shifts?: Array<string> | null, slotsNumber?: number | null, slug?: string | null, startDate?: any | null, status?: string | null, title?: string | null, updatedAt?: any | null, viewCount?: number | null, weeklyPayAmount?: number | null }> | null } | null };

export type StatesQueryVariables = Exact<{
  countryCode: Scalars['String']['input'];
}>;


export type StatesQuery = { __typename?: 'Query', states: Array<{ __typename?: 'StateMaster', countryCode?: string | null, countryId?: number | null, id: string, latitude?: string | null, longitude?: string | null, name?: string | null, stateCode?: string | null }> };

export type WorkerQueryVariables = Exact<{
  id?: InputMaybe<Scalars['String']['input']>;
}>;


export type WorkerQuery = { __typename?: 'Query', worker?: { __typename?: 'Worker', agreedToTerms?: boolean | null, availableStartDate?: any | null, changePasswordRequired?: boolean | null, completedJobsNumber?: number | null, email?: string | null, facilityTypes?: string | null, firstName?: string | null, id?: string | null, jobCategoriesWorkedNumber?: number | null, lastName?: string | null, lastOtpExpiredAt?: any | null, lastSignInAt?: string | null, locationsWorkedNumber?: number | null, maidenName?: string | null, noCall?: boolean | null, noEmail?: boolean | null, noNotification?: boolean | null, noSms?: boolean | null, overallRating?: string | null, phone?: string | null, phoneVerifiedAt?: string | null, referralCode?: string | null, referralMethod?: string | null, referrerCode?: string | null, shiftRequested?: string | null, timeOffRequested?: string | null, workAuthorized?: boolean | null, company?: { __typename?: 'Company', address?: string | null, addressState?: string | null, city?: string | null, country?: string | null, description?: string | null, id: string, logoUrl: string, mainContactEmail?: string | null, mainContactName?: string | null, name?: string | null, phone?: string | null, zip?: string | null } | null, notificationSetting?: { __typename?: 'NotificationSetting', assignmentEndingReminder?: boolean | null, completeOnboarding?: boolean | null, documentExpired?: boolean | null, id?: string | null, jobAlert?: boolean | null, jobsRecommendation?: boolean | null, licenseExpired?: boolean | null, licenseExpiredOptions?: any | null, licenseWillBeExpiredOptions?: any | null, timecardSubmissionReminder?: boolean | null } | null, recruiter?: { __typename?: 'Recruiter', companyId: string, email?: string | null, id: string, name?: string | null, phone?: string | null, title?: string | null } | null, workExperienceOverview?: { __typename?: 'WorkExperienceOverview', discipline?: string | null, id?: string | null, primarySpecialty?: string | null, secondarySpecialty?: string | null, yearsOfExperience?: string | null } | null, workExperiences?: Array<{ __typename?: 'WorkExperience', agency?: string | null, assignmentType?: string | null, bedsInUnit?: number | null, birthsPerMonth?: string | null, chartingSoftwareUsed?: string | null, city?: string | null, country?: string | null, currentlyEmployed?: boolean | null, dailyCensus?: number | null, dutiesPerformed?: string | null, endDate?: any | null, facilityName?: string | null, facilityType?: string | null, floatSpecialty?: string | null, id?: string | null, mayContactSupervisor?: boolean | null, numberSuites?: number | null, nurseRatio?: string | null, patientRatio?: string | null, patientType?: string | null, position?: string | null, reasonForLeaving?: string | null, startDate?: any | null, state?: string | null, supervisor?: string | null, travelAssignment?: boolean | null, unitSpecialty?: string | null, zipcode?: string | null }> | null, workedTimesheets?: Array<{ __typename?: 'WorkedTimesheet', callHours?: number | null, id: string, paidHours?: number | null, shiftsWorked?: number | null, status?: string | null }> | null, workerAddress?: { __typename?: 'WorkerAddress', aptNumber?: string | null, city?: string | null, country?: string | null, id: string, state?: string | null, street?: string | null, workerId: boolean, zipcode?: string | null } | null, workingPreferredLocations?: Array<{ __typename?: 'WorkingPreferredLocation', id?: string | null, preferredWorkingCity?: string | null, preferredWorkingState?: string | null }> | null } | null };

export type WorkerEducationsQueryVariables = Exact<{
  workerId?: InputMaybe<Scalars['String']['input']>;
}>;


export type WorkerEducationsQuery = { __typename?: 'Query', workerEducations: Array<{ __typename?: 'WorkerEducation', city?: string | null, country?: string | null, createdAt?: any | null, degreeDate?: any | null, degreeName?: string | null, id?: string | null, major?: string | null, schoolName?: string | null, state?: string | null, worker?: { __typename?: 'Worker', agreedToTerms?: boolean | null, availableStartDate?: any | null, changePasswordRequired?: boolean | null, completedJobsNumber?: number | null, email?: string | null, facilityTypes?: string | null, firstName?: string | null, id?: string | null, jobCategoriesWorkedNumber?: number | null, lastName?: string | null, lastOtpExpiredAt?: any | null, lastSignInAt?: string | null, locationsWorkedNumber?: number | null, maidenName?: string | null, noCall?: boolean | null, noEmail?: boolean | null, noNotification?: boolean | null, noSms?: boolean | null, overallRating?: string | null, phone?: string | null, phoneVerifiedAt?: string | null, referralCode?: string | null, referralMethod?: string | null, referrerCode?: string | null, shiftRequested?: string | null, timeOffRequested?: string | null, workAuthorized?: boolean | null } | null }> };
